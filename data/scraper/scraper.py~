from abc import ABC, abstractmethod

import requests
from bs4 import BeautifulSoup


class Scraper(ABC):
    HEADERS = {"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64)"}

    def __init__(self):
        self.response = None
        self.soup = None

    def load_soup_on_url(self, url: str):
        self.response = requests.get(url, headers=self.HEADERS)
        if self.response.status_code != 200:
            print(f"Failed to retrieve page: {self.response.status_code}")
            return None

        self.soup = BeautifulSoup(self.response.text, "html.parser")

    @abstractmethod
    def run_logic(self) -> dict:
        pass





def scrape_bls_advertising_sales():
    url = "https://www.bls.gov/ooh/sales/advertising-sales-agents.htm"
    headers = {"User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64)"}

    response = requests.get(url, headers=headers)

    if response.status_code != 200:
        print(f"Failed to retrieve page: {response.status_code}")
        return None

    soup = BeautifulSoup(response.text, "html.parser")

    # Extract Job Summary Section
    summary = soup.find("div", class_="summary-box")
    summary_text = summary.get_text(strip=True, separator="\n") if summary else "Summary not found"

    # Extract Median Pay (if available)
    median_pay = "Not found"
    for h2 in soup.find_all("h2"):
        if "Pay" in h2.get_text():
            pay_section = h2.find_next_sibling("p")
            if pay_section:
                median_pay = pay_section.get_text(strip=True)
            break

    # Extract Job Outlook
    job_outlook = "Not found"
    for h2 in soup.find_all("h2"):
        if "Job Outlook" in h2.get_text():
            outlook_section = h2.find_next_sibling("p")
            if outlook_section:
                job_outlook = outlook_section.get_text(strip=True)
            break

    return {
        "Summary": summary_text,
        "Median Pay": median_pay,
        "Job Outlook": job_outlook
    }


if __name__ == "__main__":
    data = scrape_bls_advertising_sales()
    if data:
        for key, value in data.items():
            print(f"{key}:\n{value}\n")
